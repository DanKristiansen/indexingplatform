<?xml version="1.0"?>
<project basedir="." default="echo-env" name="DDA-IPF" xmlns:xdb="http://exist-db.org/ant">
	<!-- properties -->
	<property environment="env" />
	<property name="exist.home" value="${env.EXIST_HOME}" />
	<property file="${basedir}/build.properties" />

	<!-- xmldb properties are set in file build.properties-->
	<property name="xmldb.uri" value="xmldb:exist://${xmldb.host}:${xmldb.port}/exist/xmlrpc/db" />
	<property name="xmldb.uri.rest" value="http://${xmldb.host}:${xmldb.port}/exist/rest/db" />

	<!-- directories -->
	<property name="src.dir" value="${basedir}/src" />
	<property name="src.resources.dir" value="${src.dir}/resources" />
	<property name="testsrc.dir" value="${basedir}/testsrc" />
	<property name="build.classes.dir" value="${basedir}/bin" />
	<property name="build.collection" value="${basedir}/bin/collection" />
	<property name="build.dir.jdoc" value="${build.classes.dir}/javadoc" />
	<property name="junit.results.dir" value="${build.classes.dir}/junit-result" />
	<property name="junit.report.dir" value="${build.classes.dir}/junit-report" />
	<property name="lib.dir" value="${basedir}/lib" />

	<!-- classpath -->
	<path id="classpath.core">
		<fileset dir="${exist.home}/lib/core">
			<include name="*.jar" />
		</fileset>

		<fileset dir="${exist.home}/lib/optional">
			<include name="*.jar" />
		</fileset>

		<fileset dir="${exist.home}/lib/endorsed">
			<include name="*.jar" />
		</fileset>

		<fileset dir="${exist.home}/lib/extensions">
			<include name="**/*.jar" />
		</fileset>

		<fileset dir="${exist.home}/extensions">
			<include name="**/*.jar" />
		</fileset>

		<pathelement location="${exist.home}/exist.jar" />
		<pathelement location="${exist.home}/exist-optional.jar" />
	</path>

	<path id="classpath.junit">
		<fileset dir="${exist.home}/lib/test">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${build.classes.dir}" />
		<pathelement path="${testsrc.dir}" />
		<pathelement location="${src.dir}" />
	</path>

	<path id="classpath.aspectj">
		<fileset dir="${exist.home}/tools/aspectj/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="classpath.svn">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="classpath.xmlbeans">
		<fileset dir="${lib.dir}">
			<include name="xmlbeans/*.jar" />
			<include name="dk.dda.indexingplatform.xmlbeans.jar" />
		</fileset>
	</path>

	<!-- taskdef  -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${lib.dir}/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask" classpathref="classpath.svn" />

	<!-- typedef -->
	<typedef resource="org/exist/ant/antlib.xml" uri="http://exist-db.org/ant">
		<classpath refid="classpath.core" />
	</typedef>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- standard targets 							 -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="echo-env" description="Echo envs: JAVA_HOME, EXIST_HOME">
		<echo message="JAVA_HOME: ${java.home}" />
		<echo message="EXIST_HOME: ${exist.home}" />
		<echo message="xmldb.host: ${xmldb.host}" />
		<echo message="xmldb.port: ${xmldb.port}" />
		<echo message="xmldb.user: ${xmldb.user}" />
		<echo message="xmldb.passwd: '${xmldb.passwd}'" />
		<echo message="xmldb.coll: ${xmldb.coll}" />
		<echo message="xmldb.uri: ${xmldb.uri}" />
	</target>

	<target name="init" description="Checkout jars">
		<mkdir dir="${basedir}/lib/xmlbeans" />
		<echo message="Subversion export of: xmlbeans-2.5.0 and ddi-3-xmlbeans" />
		<svn>
			<export force="true" srcurl="http://ddieditor.googlecode.com/svn/trunk/lib-java/xmlbeans/2.5.0" revision="HEAD" destpath="${basedir}/lib/xmlbeans" />
			<export force="true" srcurl="http://ddieditor.googlecode.com/svn/trunk/lib-java/generated/ddi-3-xmlbeans.jar" revision="HEAD" destpath="${basedir}/lib/xmlbeans" />
		</svn>

		<mkdir dir="${build.collection}" />
		<echo message="Subversion export of: ddi-indexingplatform" />
		<for list="${coll.top}" param="coll.top">
			<sequential>
				<svn>
					<export force="true" srcurl="${svn.url}/@{coll.top}" revision="HEAD" destpath="${build.collection}/@{coll.top}" />
				</svn>
			</sequential>
		</for>
	</target>

	<target name="compile" description="Compile source and testsource">
		<mkdir dir="${build.classes.dir}" />
		<javac destdir="${build.classes.dir}" fork="yes">
			<classpath>
				<path refid="classpath.core" />
				<path refid="classpath.junit" />
				<path refid="classpath.aspectj" />
				<path refid="classpath.xmlbeans" />
			</classpath>
			<src path="${src.dir}" />
			<src path="${testsrc.dir}" />
		</javac>
		<echo message="----" />
		<echo message="If have not done -Remember to checkout the xmlbeans-2.5.0 via the 'init' target ;-)" />
		<echo message="----" />
	</target>

	<target name="clean" description="Clean source and testsource builds">
		<delete includeemptydirs="true" verbose="true">
			<fileset dir="${build.classes.dir}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${basedir}/logs">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- exist setup     							 -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="deploy-index" depends="compile" description="Deploy indexes Note: eXist needs to be running">
		<!-- upload -->
		<for list="${coll.top}" param="coll.top">
			<sequential>
				<echo message="-----------------------------" />
				<echo message="Deploing index to: ${xmldb.uri}/system/config/db/@{coll.top}" />
				<echo message="-----------------------------" />
				<xdb:store user="${xmldb.user}" password="${xmldb.passwd}" uri="${xmldb.uri}/system/config/db/@{coll.top}" initdb="true" createcollection="true">
					<fileset dir="${build.collection}/@{coll.top}/index">
						<include name="collection.xconf" />
					</fileset>
				</xdb:store>
			</sequential>
		</for>
	</target>

	<target name="deploy-ws" description="Deploy web services Note: eXist needs to be running">
		<!-- upload -->
		<for list="${coll.top.ws}" param="coll.top.ws">
			<sequential>
				<echo message="-----------------------------" />
				<echo message="Deploing ws to: ${xmldb.uri}/system/config/db/@{coll.top.ws}" />
				<echo message="-----------------------------" />
				<xdb:store user="${xmldb.user}" password="${xmldb.passwd}" uri="${xmldb.uri}/@{coll.top.ws}/lib" initdb="true" createcollection="true">
					<fileset dir="${build.collection}/@{coll.top.ws}/lib">
						<include name="*.*" />
					</fileset>
				</xdb:store>

				<xdb:store user="${xmldb.user}" password="${xmldb.passwd}" uri="${xmldb.uri}/@{coll.top.ws}/rest" initdb="true" createcollection="true">
					<fileset dir="${build.collection}/@{coll.top.ws}/rest">
						<include name="*.*" />
					</fileset>
				</xdb:store>
			</sequential>
		</for>
	</target>

	<target name="deploy-other" description="Deploy web services Note: eXist needs to be running">
		<!-- upload -->
		<echo message="-----------------------------" />
		<echo message="Deploing ws to: ${xmldb.uri}/system/config/db/@{coll.top.ws}" />
		<echo message="-----------------------------" />
		<xdb:store user="${xmldb.user}" password="${xmldb.passwd}" uri="${xmldb.uri}/dda-denormalization" initdb="true" createcollection="true">
			<fileset dir="${build.collection}/dda-denormalization">
				<include name="*.xquery" />
			</fileset>
		</xdb:store>
	</target>

	<target name="deploy-all" depends="deploy-index, deploy-ws, deploy-other, import-xml, denormalize" description="Create indexingplatform -indexes, rest and other">
		<echo message="Deploy all !!!" />
	</target>

	<target name="import-xml" description="Import into eXist XML files located in xml-import directory Note: eXist needs to be running">
		<echo message="-----------------------------" />
		<echo message="Importing XML from: ${xml.import.dir} to: dda" />
		<echo message="-----------------------------" />
		<xdb:store user="${xmldb.user}" password="${xmldb.passwd}" uri="${xmldb.uri}/dda" initdb="true" createcollection="true">
			<fileset dir="${xml.import.dir}">
				<exclude name="duplicate/**/*.xml" />
				<include name="**/*.xml" />
			</fileset>
		</xdb:store>

		<echo message="-----------------------------" />
		<echo message="Importing XML from: ${xml.import.dir} to: dda-urn" />
		<echo message="-----------------------------" />
		<xdb:store user="${xmldb.user}" password="${xmldb.passwd}" uri="${xmldb.uri}/dda-urn" initdb="true" createcollection="true">
			<fileset dir="${xml.import.dir}">
				<include name="**/*.xml" />
			</fileset>

		</xdb:store>
	</target>

	<target name="denormalize" depends="compile" description="Reindex collections Note: eXist needs to be running">
		<echo message="-----------------------------" />
		<echo message="Denormalize" />
		<echo message="-----------------------------" />
		<java classname="dk.dda.exist.Denormalize" fork="true">
			<sysproperty key="log4j.configuration" value="file://${basedir}/log4j.xml" />
			<arg value="${xmldb.uri.rest}" />
			<arg value="/dda-denormalization/denormalize.xquery" />
			<arg value="${xmldb.user}" />
			<arg value="${xmldb.passwd}" />
			<classpath>
				<path refid="classpath.core" />
				<path refid="classpath.junit" />
				<path refid="classpath.aspectj" />
			</classpath>
		</java>
	</target>

	<target name="reindex" depends="compile" description="Reindex collections Note: eXist needs to be running">
		<for list="${coll.top}" param="coll.top">
			<sequential>
				<echo message="-----------------------------" />
				<echo message="Reindexing: @{coll.top}" />
				<echo message="-----------------------------" />
				<java classname="dk.dda.exist.Reindex" fork="true">
					<sysproperty key="log4j.configuration" value="file://${basedir}/log4j.xml" />
					<arg value="${xmldb.uri}" />
					<arg value="@{coll.top}" />
					<arg value="${xmldb.user}" />
					<arg value="${xmldb.passwd}" />
					<classpath>
						<path refid="classpath.core" />
						<path refid="classpath.junit" />
						<path refid="classpath.aspectj" />
					</classpath>
				</java>
			</sequential>
		</for>
	</target>

	<target name="remove-coll" description="Remove stored XML files by deleting collection Note: eXist needs to be running">
		<for list="${coll.top}" param="coll.top">
			<sequential>
				<echo message="-----------------------------" />
				<echo message="Removing collection: @{coll.top}" />
				<echo message="-----------------------------" />
				<xdb:remove uri="${xmldb.uri}" collection="@{coll.top}" user="${xmldb.user}" password="${xmldb.passwd}" />
			</sequential>
		</for>
	</target>

	<target name="remove-index" description="Remove stored XML files by deleting collection Note: eXist needs to be running">
		<for list="${coll.top}" param="coll.top">
			<sequential>
				<echo message="-----------------------------" />
				<echo message="Removing collection: @{coll.top}" />
				<echo message="----------------------------- " />
				<xdb:remove uri="${xmldb.uri}" collection="/system/config/db/@{coll.top}" user="${xmldb.user}" password="${xmldb.passwd}" />
			</sequential>
		</for>
	</target>

	<target name="remove-all" depends="remove-index, remove-coll" description="Remove all indexingplatform -indexes, rest, uploaded xml">
		<echo message="Remove all !!!" />
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- test										 -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="test-query" depends="compile" description="Run local testcases, based as a mod of http://exist-db.org/testing/testing.html Note: eXist must NOT be running">
		<mkdir dir="${junit.results.dir}" />
		<junit haltonfailure="false" printsummary="yes" showoutput="yes" maxmemory="512m">
			<sysproperty key="exist.home" value="${exist.home}" />
			<sysproperty key="log4j.configuration" value="file://${basedir}/log4j.xml" />
			<classpath refid="classpath.core" />
			<classpath refid="classpath.junit" />
			<classpath refid="classpath.aspectj" />
			<classpath refid="classpath.xmlbeans" />

			<formatter type="plain" />
			<formatter type="xml" />

			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${basedir}/testsrc">
					<include name="dk./dda/exist/test/**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test-junit" depends="compile" description="Run JUnit testcases Note: eXist MUST be running">
		<mkdir dir="${junit.results.dir}" />
		<junit haltonfailure="false" printsummary="yes" showoutput="yes" maxmemory="512m">
			<sysproperty key="exist.home" value="${exist.home}" />
			<sysproperty key="log4j.configuration" value="file://${basedir}/log4j.xml" />
			<classpath refid="classpath.core" />
			<classpath refid="classpath.junit" />
			<classpath refid="classpath.aspectj" />
			<classpath refid="classpath.xmlbeans" />

			<formatter type="plain" />
			<formatter type="xml" />

			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${basedir}/testsrc">
					<include name="dk/dda/indexingplatform/rest/**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test-report" description="Generate HTML test reports">
		<echo message="-----------------------------" />
		<echo message="Creating reports, please wait" />
		<echo message="-----------------------------" />
		<mkdir dir="${junit.report.dir}" />
		<junitreport todir="${junit.report.dir}">
			<fileset dir="${junit.results.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.report.dir}" />
		</junitreport>
	</target>
</project>
